lat = ncread('/Users/yingyingfeng/Downloads/Pacemaker/b.e11.B1850C5CN.f19_g16.LME.Restart.to.1258.015.Pacemaker.cooling.mme.A.I..cam.h0.1258-06.nc','lat');
lon = ncread('/Users/yingyingfeng/Downloads/Pacemaker/b.e11.B1850C5CN.f19_g16.LME.Restart.to.1258.015.Pacemaker.cooling.mme.A.I..cam.h0.1258-06.nc','lon');
%% climatology ts
filePattern = '/Volumes/WIN11NEW/TS_merge_new/TS_merge_b.e11.B1850C5CN.f19_g16.LME.Restart.to.1258.%03d.cam.h0.1243_1257.nc';
% 循环读取文件
for i = 1
   fileName = sprintf(filePattern, i);
    
    % 检查文件是否存在（可选）
    if exist(fileName, 'file')
        disp(['正在读取文件: ', fileName]);
        
        % 读取 NetCDF 文件中的某个变量，例如 'OMEGA'
        tmp = ncread(fileName, 'TS'); 
        ts(:,:,:,i) = tmp(:,:,13:180,i);
        
        % 这里可以对数据进行处理，例如存储到数组中
        % data{i} = omegaData;
    else
        disp(['文件不存在: ', fileName]);
    end
end

for i = 2:15  % 从 001 到 015
    % 生成当前文件名
    fileName = sprintf(filePattern, i);
    
    % 检查文件是否存在（可选）
    if exist(fileName, 'file')
        disp(['正在读取文件: ', fileName]);
        
        % 读取 NetCDF 文件中的某个变量，例如 'OMEGA'
        ts(:,:,:,i) = ncread(fileName, 'TS'); 
        
        % 这里可以对数据进行处理，例如存储到数组中
        % data{i} = omegaData;
    else
        disp(['文件不存在: ', fileName]);
    end
end
clear i;
ts_cli = reshape(ts,144,96,12,size(ts,3)./12,size(ts,4));
ts_cli_monthly = squeeze(nanmean(ts_cli,4));

clear ts;  clear fileName; clear filePattern; clear tmp; clear ts_cli;
%% Exp ts
filePattern = '/Volumes/Untitled/TS/TS_merge_merge_b.e11.B1850C5CN.f19_g16.LME.April.1258.%03d.Pacemaker.cli.Indo.cam.h0.1258_1260.nc';
% 循环读取文件
for i = 1:15  % 从 001 到 015
    % 生成当前文件名
    fileName = sprintf(filePattern, i);
    
    % 检查文件是否存在（可选）
    if exist(fileName, 'file')
        disp(['正在读取文件: ', fileName]);
        
        % 读取 NetCDF 文件中的某个变量，例如 'OMEGA'
        ts_exp(:,:,:,i) = ncread(fileName, 'TS'); 
        
        % 这里可以对数据进行处理，例如存储到数组中
        % data{i} = omegaData;
    else
        disp(['文件不存在: ', fileName]);
    end
end
clear i;
clear fileName; clear filePattern; clear tmp;

%% 计算Nino3.4 指数
TS(:,:,1:9,:) = ts_exp(:,:,1:9,:) - ts_cli_monthly(:,:,4:12,:);
TS(:,:,10:21,:) = ts_exp(:,:,10:21,:) - ts_cli_monthly(:,:,1:12,:);
TS(:,:,22:24,:) = ts_exp(:,:,22:24,:) - ts_cli_monthly(:,:,1:3,:);

f_var_per = permute(TS,[2,1,3,4]); clear ts_ens_cesm;
f_var_per_flip = flipud(f_var_per); clear f_var_per;
lat_af = flipud(lat);
lon_af = lon;
clear lon; clear lat;

s = size(f_var_per_flip);
var_fi = nan(s(1),s(2),s(3),s(4));

if(lon_af(1)>=0)
    idx = find(lon_af<=180);
    n1 = length(idx); n2 = length(lon_af)-length(idx);
    tmp1 = lon_af(1:n1); tmp2 = lon_af(n1+1:end)-360;
    lon_af(n2+1:end) = tmp1;
    lon_af(1:n2) = tmp2;
    tmp1 = f_var_per_flip(:,1:n1,:,:); tmp2 = f_var_per_flip(:,n1+1:end,:,:);
    var_fi(:,1:n2,:,:) = tmp2;
    var_fi(:,n2+1:end,:,:) = tmp1;
end
clear f_var_per_flip; clear tmp1; clear tmp2;
ts_per_fl = var_fi; clear var_fi;
clear var_fi; clear f_var_per_flip; clear f_var; clear ts_ens; clear f_var_per; clear tmp1; clear tmp2; 

hadisst = ncread('/Users/yingyingfeng/Downloads/Data/HadISST_sst.nc','sst');
lat_hadi = ncread('/Users/yingyingfeng/Downloads/Data/HadISST_sst.nc','latitude');
lon_hadi = ncread('/Users/yingyingfeng/Downloads/Data/HadISST_sst.nc','longitude');
hadisst_per = permute(hadisst,[2,1,3]);  % 1961-1-1  1093   %2005-12-15  1632

mask_sst_tmp = squeeze(hadisst_per(:,:,end));
mask_sst_tmp(~isnan(mask_sst_tmp))=1;
reso_lat = 1.875; reso_lon = 2.5;
mask_sst = imresample([1 1], mask_sst_tmp,[reso_lon,reso_lat],'linear');
hadisst_per_re = imresample([1 1], hadisst_per,[reso_lon,reso_lat],'linear');

lat_05deg = 90-reso_lat/2 : -reso_lat : -90+reso_lat/2;
lon_05deg = -180+reso_lon/2:reso_lon:180-reso_lon/2;
[glon_05deg,glat_05deg] = meshgrid(lon_05deg,lat_05deg);
[nlat_05deg,nlon_05deg] = size(glon_05deg);

display ('Generating Area Mask ...');
map = ones(nlat_05deg,nlon_05deg);
R = georasterref('RasterSize', [nlat_05deg nlon_05deg], ...
    'RasterInterpretation', 'cells', 'ColumnsStartFrom', 'north', ...
    'LatitudeLimits', [lat_05deg(end) lat_05deg(1)], 'LongitudeLimits', [lon_05deg(1) lon_05deg(end)]);
ellipsid = referenceEllipsoid('Earth','km');
[~,areavec] = areamat(map,R,ellipsid);
[~,map_area0] = meshgrid(lon_05deg,areavec);
mask_area = map_area0;
mask_area(isnan(mask_sst)) = nan;
%%%%%%%%%%%%%%%%开始SST选区%%%%%%%%%%%%%%%%%%%%
nino_mask = mask_area;       % 5N-5S, 170W-120W
nino_mask_final = mask_area;
nino_mask(46:51,5:24) = 999; nino_mask(nino_mask~=999) = nan;
nino_mask_final(isnan(nino_mask)) = nan;

mask = nino_mask_final;
for iens = 1:15
    data_no_areaweight = squeeze(ts_per_fl(:,:,:,iens)); %!!!!%%%%%
    mask_2D_mean = nanmean(reshape(mask,size(mask,1)*size(mask,2),1)); %%% 或：mask_2D_mean = nanmean(mask(:));
    ss = size(data_no_areaweight);
    temp = nan(ss(1),ss(2),ss(3));
    for i = 1:ss(3)
        temp(:,:,i) = data_no_areaweight(:,:,i).*mask./mask_2D_mean;    % 把ET数据转换为加权后的，以求加权平均值
    end
    data = temp;
    s = size(data);
    for i = 1:s(3)
        t = squeeze(data(:,:,i));
        data_series(i,iens) = nanmean(reshape(t,size(data,1)*size(data,2),1));
    end
end

%% plot
fsize = 12;
page_width = 18; page_height = 18;
figure('Units','centimeters',...
    'position',[0 0 page_width page_height],...
    'PaperPosition',[0 0 page_width page_height],...
    'color',[1 1 1]);

xstart = 0.1 ; ystart = 0.15;
height = 0.25; width =0.8; epsx = 0.05;  epsy = 0.15;
nrow = 3; ncol = 1;
pos = zeros(nrow*ncol,4);
for r0 = 1:nrow
    for c = 1:ncol
        n = (r0-1)*ncol+c;
        pos(n,1) = xstart + (c-1)*width + (c-1)*epsx;
        pos(n,2) = 1 - (ystart + r0*height + (r0-1)*epsy);
        pos(n,3) = width;
        pos(n,4) = height;
    end
end

lanina_group = [2 4 9 10 12 13 15];
elnino_group = [3 6 11];
neural_group = [1 5 7 8 14];


inum = 1;
ax= axes('Position',pos(inum,:),'Color','none');
yline(0, '--k', 'LineWidth', 1);
set(ax, 'YLim',[-5 5],'YTick',-4:1:4, 'TickDir','out','TickLength',[0.004/0.5, 0], 'fontname','Helvetica','fontsize',12,'yticklabel',{'-4','','-2','','0','','2','','4'});
set(gca, 'XAxisLocation', 'bottom');
set(ax, 'XLim',[-2 24] ,'XTick',-3:3:24, 'fontname','Helvetica','fontsize',12);
ax = gca;
ax.XMinorTick = 'on';
ax.MinorGridLineStyle = ':';
ax.XAxis.MinorTickValues = -3:1:24;
hold on;

for kk = 1:size(neural_group,2)
    plot(-3:24, movmean(data_series(1:28,neural_group(kk)),5), '-',  'LineWidth', 1.5, 'LineJoin' ,'miter','Color',[195 177 65]./255);
    hold on;
end

for ii = 1:size(elnino_group,2)
    plot(-3:24, movmean(data_series(1:28,elnino_group(ii)),5), '-',  'LineWidth', 1.5, 'LineJoin' ,'miter','Color',[140 6 3]./255);
    hold on;
end

for iens = 1:size(lanina_group,2)
    plot(-3:24, movmean(data_series(1:28,lanina_group(iens)),5), '-',  'LineWidth', 1.5, 'LineJoin' ,'miter','Color',[148 204 221]./255);
    hold on;
end

ylabel('Nino3.4 Index','fontname','Helvetica','fontsize',12);
box off;
ax=gca;
axes('position',ax.Position,'box','on','ytick',[],'xtick',[],'color','none');
%
img =gcf;
print(img, '-dtiff', '-r600', 'nino3.4_af_erupt_15ens_cli_Ind.tif');
